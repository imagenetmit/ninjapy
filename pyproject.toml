[project]
name = "ninjapy"
version = "0.0.2"
description = "Python Client SDK Generated by Speakeasy."
authors = [{ name = "Speakeasy" },]
readme = "README.md"
requires-python = ">=3.9"
dependencies = [
    "eval-type-backport >=0.2.0",
    "httpx >=0.28.1",
    "pydantic >=2.10.3",
    "python-dateutil >=2.8.2",
    "typing-inspect >=0.9.0",
]
urls = {Repository = "https://github.com/imagenetmit/ninjapy"}

[project.optional-dependencies]
dev = [
    "mypy==1.14.1",
    "pylint==3.2.3",
    "types-python-dateutil==2.9.0.20240316",
    "pytest-asyncio>=0.21.0",
    "ruff>=0.3.0",
    "black>=24.2.0",
    "isort>=5.13.0",
    "bandit>=1.7.7",
    "pytest-cov>=4.1.0"
]

[tool.poetry]
name = "ninjapy"
version = "0.0.1"
packages = [
    { include = "ninjapy", from = "src" }
]
include = ["py.typed", "src/ninjapy/py.typed"]

[tool.setuptools.package-data]
"*" = ["py.typed", "src/ninjapy/py.typed"]

[virtualenvs]
in-project = true

[tool.poetry.group.dev.dependencies]
mypy = "==1.14.1"
pylint = "==3.2.3"
types-python-dateutil = "^2.9.0.20240316"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
pythonpath = ["src"]

# pytest-asyncio configuration
asyncio_mode = "strict"
asyncio_fixture_loop_scope = "function"  # Explicitly set the loop scope as recommended

[tool.mypy]
disable_error_code = "misc"

[[tool.mypy.overrides]]
module = "typing_inspect"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "jsonpath"
ignore_missing_imports = true

[tool.pyright]
venvPath = "."
venv = ".venv"

# Add configuration for the new tools
[tool.black]
line-length = 88
target-version = ["py39"]
include = '\.pyi?$'

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88

[tool.ruff]
line-length = 88
target-version = "py39"
select = ["E", "F", "B", "I", "N", "UP", "PL", "RUF"]

[tool.coverage.run]
source = ["src/ninjapy"]
branch = true

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if TYPE_CHECKING:",
    "raise NotImplementedError",
]


