"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from ninjapy.types import BaseModel
from ninjapy.utils import FieldMetadata, QueryParamMetadata
import pydantic
from typing import Any, Dict, List, Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class GetLocationsRequestTypedDict(TypedDict):
    page_size: NotRequired[int]
    r"""Limit number of locations to return"""
    after: NotRequired[int]
    r"""Last Location Identifier from previous page"""


class GetLocationsRequest(BaseModel):
    page_size: Annotated[
        Optional[int],
        pydantic.Field(alias="pageSize"),
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = None
    r"""Limit number of locations to return"""

    after: Annotated[
        Optional[int],
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = None
    r"""Last Location Identifier from previous page"""


class GetLocationsFieldsTypedDict(TypedDict):
    r"""Custom Fields"""


class GetLocationsFields(BaseModel):
    r"""Custom Fields"""


class GetLocationsResponseBodyTypedDict(TypedDict):
    name: NotRequired[str]
    r"""Location name"""
    address: NotRequired[str]
    r"""Address"""
    description: NotRequired[str]
    r"""Description"""
    user_data: NotRequired[Dict[str, Any]]
    r"""Custom attributes"""
    tags: NotRequired[List[str]]
    r"""Tags"""
    fields: NotRequired[Dict[str, GetLocationsFieldsTypedDict]]
    r"""Custom Fields"""
    id: NotRequired[int]
    r"""Location identifier"""
    organization_id: NotRequired[int]
    r"""Organization identifier"""


class GetLocationsResponseBody(BaseModel):
    name: Optional[str] = None
    r"""Location name"""

    address: Optional[str] = None
    r"""Address"""

    description: Optional[str] = None
    r"""Description"""

    user_data: Annotated[Optional[Dict[str, Any]], pydantic.Field(alias="userData")] = (
        None
    )
    r"""Custom attributes"""

    tags: Optional[List[str]] = None
    r"""Tags"""

    fields: Optional[Dict[str, GetLocationsFields]] = None
    r"""Custom Fields"""

    id: Optional[int] = None
    r"""Location identifier"""

    organization_id: Annotated[
        Optional[int], pydantic.Field(alias="organizationId")
    ] = None
    r"""Organization identifier"""
