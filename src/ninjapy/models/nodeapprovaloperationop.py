"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from enum import Enum
from ninjapy.types import BaseModel
from ninjapy.utils import FieldMetadata, PathParamMetadata, RequestMetadata
from typing import List, Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class Mode(str, Enum):
    r"""Approval action to perform"""

    APPROVE = "APPROVE"
    REJECT = "REJECT"


class NodeApprovalOperationRequestBodyTypedDict(TypedDict):
    devices: NotRequired[List[int]]


class NodeApprovalOperationRequestBody(BaseModel):
    devices: Optional[List[int]] = None


class NodeApprovalOperationRequestTypedDict(TypedDict):
    mode: Mode
    r"""Approval action to perform"""
    request_body: NotRequired[NodeApprovalOperationRequestBodyTypedDict]


class NodeApprovalOperationRequest(BaseModel):
    mode: Annotated[
        Mode, FieldMetadata(path=PathParamMetadata(style="simple", explode=False))
    ]
    r"""Approval action to perform"""

    request_body: Annotated[
        Optional[NodeApprovalOperationRequestBody],
        FieldMetadata(request=RequestMetadata(media_type="application/json")),
    ] = None
