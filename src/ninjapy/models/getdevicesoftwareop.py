"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from datetime import datetime
from ninjapy.types import BaseModel
from ninjapy.utils import FieldMetadata, PathParamMetadata
import pydantic
from typing import Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class GetDeviceSoftwareRequestTypedDict(TypedDict):
    id: int
    r"""Device identifier"""


class GetDeviceSoftwareRequest(BaseModel):
    id: Annotated[
        int, FieldMetadata(path=PathParamMetadata(style="simple", explode=False))
    ]
    r"""Device identifier"""


class GetDeviceSoftwareResponseBodyTypedDict(TypedDict):
    install_date: NotRequired[datetime]
    r"""Installation Date"""
    location: NotRequired[str]
    r"""Location"""
    name: NotRequired[str]
    r"""Product Name"""
    publisher: NotRequired[str]
    r"""Publisher"""
    size: NotRequired[int]
    r"""Size on disk"""
    version: NotRequired[str]
    r"""Version"""
    product_code: NotRequired[str]
    r"""Product Code"""


class GetDeviceSoftwareResponseBody(BaseModel):
    install_date: Annotated[Optional[datetime], pydantic.Field(alias="installDate")] = (
        None
    )
    r"""Installation Date"""

    location: Optional[str] = None
    r"""Location"""

    name: Optional[str] = None
    r"""Product Name"""

    publisher: Optional[str] = None
    r"""Publisher"""

    size: Optional[int] = None
    r"""Size on disk"""

    version: Optional[str] = None
    r"""Version"""

    product_code: Annotated[Optional[str], pydantic.Field(alias="productCode")] = None
    r"""Product Code"""
