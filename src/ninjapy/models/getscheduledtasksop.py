"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from ninjapy.types import BaseModel
import pydantic
from typing import Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class GetScheduledTasksResponseBodyTypedDict(TypedDict):
    id: NotRequired[int]
    r"""Scheduled Task identifier"""
    name: NotRequired[str]
    r"""Name"""
    description: NotRequired[str]
    r"""Description"""
    enabled: NotRequired[bool]
    r"""Is Enabled ?"""
    created: NotRequired[float]
    r"""Timestamp of Scheduled Task creation"""
    last_run: NotRequired[float]
    r"""Timestamp of last Scheduled Task run"""
    run_count: NotRequired[int]
    r"""Number of times scheduled task ran"""


class GetScheduledTasksResponseBody(BaseModel):
    id: Optional[int] = None
    r"""Scheduled Task identifier"""

    name: Optional[str] = None
    r"""Name"""

    description: Optional[str] = None
    r"""Description"""

    enabled: Optional[bool] = None
    r"""Is Enabled ?"""

    created: Optional[float] = None
    r"""Timestamp of Scheduled Task creation"""

    last_run: Annotated[Optional[float], pydantic.Field(alias="lastRun")] = None
    r"""Timestamp of last Scheduled Task run"""

    run_count: Annotated[Optional[int], pydantic.Field(alias="runCount")] = None
    r"""Number of times scheduled task ran"""
