"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from ninjapy.types import BaseModel
from ninjapy.utils import FieldMetadata, QueryParamMetadata
import pydantic
from typing import List, Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class GetRAIDDriveReportRequestTypedDict(TypedDict):
    df: NotRequired[str]
    r"""Device filter"""
    ts: NotRequired[str]
    r"""Monitoring timestamp filter"""
    cursor: NotRequired[str]
    r"""Cursor name"""
    page_size: NotRequired[int]
    r"""Limit number of records per page"""


class GetRAIDDriveReportRequest(BaseModel):
    df: Annotated[
        Optional[str],
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = None
    r"""Device filter"""

    ts: Annotated[
        Optional[str],
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = None
    r"""Monitoring timestamp filter"""

    cursor: Annotated[
        Optional[str],
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = None
    r"""Cursor name"""

    page_size: Annotated[
        Optional[int],
        pydantic.Field(alias="pageSize"),
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = None
    r"""Limit number of records per page"""


class GetRAIDDriveReportCursorTypedDict(TypedDict):
    name: NotRequired[str]
    offset: NotRequired[int]
    count: NotRequired[int]
    expires: NotRequired[float]


class GetRAIDDriveReportCursor(BaseModel):
    name: Optional[str] = None

    offset: Optional[int] = None

    count: Optional[int] = None

    expires: Optional[float] = None


class GetRAIDDriveReportResultsTypedDict(TypedDict):
    controller_index: NotRequired[int]
    r"""Controller index"""
    drive_group: NotRequired[str]
    r"""Drive Group"""
    drive_id: NotRequired[str]
    r"""Drive Identifier"""
    interface_type: NotRequired[str]
    r"""Interface type"""
    location: NotRequired[str]
    r"""Location"""
    media_type: NotRequired[str]
    r"""Media type"""
    model: NotRequired[str]
    r"""Model"""
    protection_info: NotRequired[str]
    r"""Protection Information"""
    self_encrypted: NotRequired[bool]
    r"""Is self encrypted?"""
    serial: NotRequired[str]
    r"""Serial number"""
    size: NotRequired[int]
    r"""Size (bytes)"""
    spun: NotRequired[bool]
    r"""Spun?"""
    status: NotRequired[str]
    r"""Status"""
    device_id: NotRequired[int]
    r"""Device identifier"""
    timestamp: NotRequired[float]
    r"""Date/Time when data was collected/updated"""


class GetRAIDDriveReportResults(BaseModel):
    controller_index: Annotated[
        Optional[int], pydantic.Field(alias="controllerIndex")
    ] = None
    r"""Controller index"""

    drive_group: Annotated[Optional[str], pydantic.Field(alias="driveGroup")] = None
    r"""Drive Group"""

    drive_id: Annotated[Optional[str], pydantic.Field(alias="driveId")] = None
    r"""Drive Identifier"""

    interface_type: Annotated[Optional[str], pydantic.Field(alias="interfaceType")] = (
        None
    )
    r"""Interface type"""

    location: Optional[str] = None
    r"""Location"""

    media_type: Annotated[Optional[str], pydantic.Field(alias="mediaType")] = None
    r"""Media type"""

    model: Optional[str] = None
    r"""Model"""

    protection_info: Annotated[
        Optional[str], pydantic.Field(alias="protectionInfo")
    ] = None
    r"""Protection Information"""

    self_encrypted: Annotated[Optional[bool], pydantic.Field(alias="selfEncrypted")] = (
        None
    )
    r"""Is self encrypted?"""

    serial: Optional[str] = None
    r"""Serial number"""

    size: Optional[int] = None
    r"""Size (bytes)"""

    spun: Optional[bool] = None
    r"""Spun?"""

    status: Optional[str] = None
    r"""Status"""

    device_id: Annotated[Optional[int], pydantic.Field(alias="deviceId")] = None
    r"""Device identifier"""

    timestamp: Optional[float] = None
    r"""Date/Time when data was collected/updated"""


class GetRAIDDriveReportResponseBodyTypedDict(TypedDict):
    r"""default response"""

    cursor: NotRequired[GetRAIDDriveReportCursorTypedDict]
    results: NotRequired[List[GetRAIDDriveReportResultsTypedDict]]


class GetRAIDDriveReportResponseBody(BaseModel):
    r"""default response"""

    cursor: Optional[GetRAIDDriveReportCursor] = None

    results: Optional[List[GetRAIDDriveReportResults]] = None
