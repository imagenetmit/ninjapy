"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from enum import Enum
from ninjapy.types import BaseModel
from ninjapy.utils import FieldMetadata, PathParamMetadata, QueryParamMetadata
import pydantic
from typing import List, Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class RequestScriptingOptionsRequestTypedDict(TypedDict):
    id: int
    r"""Device identifier"""
    lang: NotRequired[str]
    r"""Language"""


class RequestScriptingOptionsRequest(BaseModel):
    id: Annotated[
        int, FieldMetadata(path=PathParamMetadata(style="simple", explode=False))
    ]
    r"""Device identifier"""

    lang: Annotated[
        Optional[str],
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = None
    r"""Language"""


class CategoriesTypedDict(TypedDict):
    id: NotRequired[int]
    name: NotRequired[str]
    internal: NotRequired[bool]


class Categories(BaseModel):
    id: Optional[int] = None

    name: Optional[str] = None

    internal: Optional[bool] = None


class RequestScriptingOptionsType(str, Enum):
    r"""Type of script/action"""

    ACTION = "ACTION"
    SCRIPT = "SCRIPT"


class RequestScriptingOptionsScriptsTypedDict(TypedDict):
    type: NotRequired[RequestScriptingOptionsType]
    r"""Type of script/action"""
    id: NotRequired[int]
    r"""Custom script identifier (Scripts)"""
    uid: NotRequired[str]
    r"""Built-in action identifier (Actions)"""
    name: NotRequired[str]
    r"""Name"""
    language: NotRequired[str]
    r"""Script language"""
    description: NotRequired[str]
    r"""Description"""
    architecture: NotRequired[List[str]]
    r"""Applicable architectures"""
    category_id: NotRequired[int]
    r"""Script Category identifier"""


class RequestScriptingOptionsScripts(BaseModel):
    type: Optional[RequestScriptingOptionsType] = None
    r"""Type of script/action"""

    id: Optional[int] = None
    r"""Custom script identifier (Scripts)"""

    uid: Optional[str] = None
    r"""Built-in action identifier (Actions)"""

    name: Optional[str] = None
    r"""Name"""

    language: Optional[str] = None
    r"""Script language"""

    description: Optional[str] = None
    r"""Description"""

    architecture: Optional[List[str]] = None
    r"""Applicable architectures"""

    category_id: Annotated[Optional[int], pydantic.Field(alias="categoryId")] = None
    r"""Script Category identifier"""


class RequestScriptingOptionsManagementType(str, Enum):
    SNMPV12_C = "SNMPV12C"
    SNMPV3 = "SNMPV3"
    TELNET_SSH = "TELNET_SSH"
    NETWORK_LOCATION = "NETWORK_LOCATION"
    ENCRYPTION_KEY = "ENCRYPTION_KEY"
    BASIC = "BASIC"
    SNMPV1 = "SNMPV1"
    SNMPV2 = "SNMPV2"


class RequestScriptingOptionsCredentialsTypedDict(TypedDict):
    id: NotRequired[int]
    name: NotRequired[str]
    type: NotRequired[RequestScriptingOptionsManagementType]


class RequestScriptingOptionsCredentials(BaseModel):
    id: Optional[int] = None

    name: Optional[str] = None

    type: Optional[RequestScriptingOptionsManagementType] = None


class CredentialsTypedDict(TypedDict):
    roles: NotRequired[List[str]]
    credentials: NotRequired[List[RequestScriptingOptionsCredentialsTypedDict]]


class Credentials(BaseModel):
    roles: Optional[List[str]] = None

    credentials: Optional[List[RequestScriptingOptionsCredentials]] = None


class RequestScriptingOptionsResponseBodyTypedDict(TypedDict):
    r"""default response"""

    categories: NotRequired[List[CategoriesTypedDict]]
    scripts: NotRequired[List[RequestScriptingOptionsScriptsTypedDict]]
    credentials: NotRequired[CredentialsTypedDict]


class RequestScriptingOptionsResponseBody(BaseModel):
    r"""default response"""

    categories: Optional[List[Categories]] = None

    scripts: Optional[List[RequestScriptingOptionsScripts]] = None

    credentials: Optional[Credentials] = None
