"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from ninjapy.types import BaseModel
from ninjapy.utils import FieldMetadata, PathParamMetadata
import pydantic
from typing import Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class GetDeviceProcessorsRequestTypedDict(TypedDict):
    id: int
    r"""Device identifier"""


class GetDeviceProcessorsRequest(BaseModel):
    id: Annotated[
        int, FieldMetadata(path=PathParamMetadata(style="simple", explode=False))
    ]
    r"""Device identifier"""


class GetDeviceProcessorsResponseBodyTypedDict(TypedDict):
    r"""Processors"""

    architecture: NotRequired[str]
    r"""Architecture"""
    max_clock_speed: NotRequired[int]
    r"""Max Clock Speed"""
    clock_speed: NotRequired[int]
    r"""Current Clock Speed"""
    name: NotRequired[str]
    r"""Name"""
    num_cores: NotRequired[int]
    r"""Number of Cores"""
    num_logical_cores: NotRequired[int]
    r"""Number of Logical Cores]"""


class GetDeviceProcessorsResponseBody(BaseModel):
    r"""Processors"""

    architecture: Optional[str] = None
    r"""Architecture"""

    max_clock_speed: Annotated[Optional[int], pydantic.Field(alias="maxClockSpeed")] = (
        None
    )
    r"""Max Clock Speed"""

    clock_speed: Annotated[Optional[int], pydantic.Field(alias="clockSpeed")] = None
    r"""Current Clock Speed"""

    name: Optional[str] = None
    r"""Name"""

    num_cores: Annotated[Optional[int], pydantic.Field(alias="numCores")] = None
    r"""Number of Cores"""

    num_logical_cores: Annotated[
        Optional[int], pydantic.Field(alias="numLogicalCores")
    ] = None
    r"""Number of Logical Cores]"""
