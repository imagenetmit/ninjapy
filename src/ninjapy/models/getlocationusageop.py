"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from ninjapy.types import BaseModel
from ninjapy.utils import FieldMetadata, PathParamMetadata
import pydantic
from typing import Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class GetLocationUsageRequestTypedDict(TypedDict):
    id: int
    r"""Organization identifier"""
    location_id: int
    r"""Location identifier"""


class GetLocationUsageRequest(BaseModel):
    id: Annotated[
        int, FieldMetadata(path=PathParamMetadata(style="simple", explode=False))
    ]
    r"""Organization identifier"""

    location_id: Annotated[
        int,
        pydantic.Field(alias="locationId"),
        FieldMetadata(path=PathParamMetadata(style="simple", explode=False)),
    ]
    r"""Location identifier"""


class GetLocationUsageResponseBodyTypedDict(TypedDict):
    r"""Returns a location backup usage"""

    location_id: NotRequired[int]
    r"""Device location id"""
    location_name: NotRequired[str]
    r"""Device location name"""
    location_description: NotRequired[str]
    r"""Device location description"""
    revisions_current_size: NotRequired[int]
    revisions_previous_size: NotRequired[int]
    revisions_deleted_size: NotRequired[int]
    local_file_folder_size: NotRequired[int]
    local_image_size: NotRequired[int]
    local_image_v2_size: NotRequired[int]
    cloud_file_folder_size: NotRequired[int]
    cloud_image_size: NotRequired[int]
    cloud_image_v2_size: NotRequired[int]
    last_successful_backup_job: NotRequired[float]
    last_failed_backup_job: NotRequired[float]
    organization_id: NotRequired[int]
    organization_name: NotRequired[str]
    revisions_total_size: NotRequired[int]
    r"""Revisions total size"""
    cloud_total_size: NotRequired[int]
    r"""Revisions cloud total size"""
    local_total_size: NotRequired[int]
    r"""Revisions local total size"""


class GetLocationUsageResponseBody(BaseModel):
    r"""Returns a location backup usage"""

    location_id: Annotated[Optional[int], pydantic.Field(alias="locationId")] = None
    r"""Device location id"""

    location_name: Annotated[Optional[str], pydantic.Field(alias="locationName")] = None
    r"""Device location name"""

    location_description: Annotated[
        Optional[str], pydantic.Field(alias="locationDescription")
    ] = None
    r"""Device location description"""

    revisions_current_size: Annotated[
        Optional[int], pydantic.Field(alias="revisionsCurrentSize")
    ] = None

    revisions_previous_size: Annotated[
        Optional[int], pydantic.Field(alias="revisionsPreviousSize")
    ] = None

    revisions_deleted_size: Annotated[
        Optional[int], pydantic.Field(alias="revisionsDeletedSize")
    ] = None

    local_file_folder_size: Annotated[
        Optional[int], pydantic.Field(alias="localFileFolderSize")
    ] = None

    local_image_size: Annotated[
        Optional[int], pydantic.Field(alias="localImageSize")
    ] = None

    local_image_v2_size: Annotated[
        Optional[int], pydantic.Field(alias="localImageV2Size")
    ] = None

    cloud_file_folder_size: Annotated[
        Optional[int], pydantic.Field(alias="cloudFileFolderSize")
    ] = None

    cloud_image_size: Annotated[
        Optional[int], pydantic.Field(alias="cloudImageSize")
    ] = None

    cloud_image_v2_size: Annotated[
        Optional[int], pydantic.Field(alias="cloudImageV2Size")
    ] = None

    last_successful_backup_job: Annotated[
        Optional[float], pydantic.Field(alias="lastSuccessfulBackupJob")
    ] = None

    last_failed_backup_job: Annotated[
        Optional[float], pydantic.Field(alias="lastFailedBackupJob")
    ] = None

    organization_id: Annotated[
        Optional[int], pydantic.Field(alias="organizationId")
    ] = None

    organization_name: Annotated[
        Optional[str], pydantic.Field(alias="organizationName")
    ] = None

    revisions_total_size: Annotated[
        Optional[int], pydantic.Field(alias="revisionsTotalSize")
    ] = None
    r"""Revisions total size"""

    cloud_total_size: Annotated[
        Optional[int], pydantic.Field(alias="cloudTotalSize")
    ] = None
    r"""Revisions cloud total size"""

    local_total_size: Annotated[
        Optional[int], pydantic.Field(alias="localTotalSize")
    ] = None
    r"""Revisions local total size"""
