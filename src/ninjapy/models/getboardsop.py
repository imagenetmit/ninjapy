"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from ninjapy.types import BaseModel
import pydantic
from typing import Dict, List, Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class AnyTTypedDict(TypedDict):
    field: NotRequired[str]
    operator: NotRequired[str]
    value: NotRequired[str]


class AnyT(BaseModel):
    field: Optional[str] = None

    operator: Optional[str] = None

    value: Optional[str] = None


class AllTypedDict(TypedDict):
    field: NotRequired[str]
    operator: NotRequired[str]
    value: NotRequired[str]


class All(BaseModel):
    field: Optional[str] = None

    operator: Optional[str] = None

    value: Optional[str] = None


class ConditionsTypedDict(TypedDict):
    any: NotRequired[List[AnyTTypedDict]]
    all: NotRequired[List[AllTypedDict]]


class Conditions(BaseModel):
    any: Optional[List[AnyT]] = None

    all: Optional[List[All]] = None


class GetBoardsSortByTypedDict(TypedDict):
    pass


class GetBoardsSortBy(BaseModel):
    pass


class GetBoardsResponseBodyTypedDict(TypedDict):
    id: NotRequired[int]
    uid: NotRequired[str]
    name: NotRequired[str]
    description: NotRequired[str]
    conditions: NotRequired[ConditionsTypedDict]
    create_time: NotRequired[float]
    update_time: NotRequired[float]
    system: NotRequired[bool]
    columns: NotRequired[List[str]]
    sort_by: NotRequired[List[Dict[str, GetBoardsSortByTypedDict]]]
    ticket_count: NotRequired[int]


class GetBoardsResponseBody(BaseModel):
    id: Optional[int] = None

    uid: Optional[str] = None

    name: Optional[str] = None

    description: Optional[str] = None

    conditions: Optional[Conditions] = None

    create_time: Annotated[Optional[float], pydantic.Field(alias="createTime")] = None

    update_time: Annotated[Optional[float], pydantic.Field(alias="updateTime")] = None

    system: Optional[bool] = None

    columns: Optional[List[str]] = None

    sort_by: Annotated[
        Optional[List[Dict[str, GetBoardsSortBy]]], pydantic.Field(alias="sortBy")
    ] = None

    ticket_count: Annotated[Optional[int], pydantic.Field(alias="ticketCount")] = None
