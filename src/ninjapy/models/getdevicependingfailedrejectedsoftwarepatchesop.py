"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from ninjapy.types import BaseModel
from ninjapy.utils import FieldMetadata, PathParamMetadata, QueryParamMetadata
import pydantic
from typing import Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class GetDevicePendingFailedRejectedSoftwarePatchesRequestTypedDict(TypedDict):
    id: int
    r"""Device identifier"""
    status: NotRequired[str]
    r"""Patch Status filter"""
    product_identifier: NotRequired[str]
    r"""Product Identifier"""
    type: NotRequired[str]
    r"""Patch Type filter"""
    impact: NotRequired[str]
    r"""Patch Impact filter"""


class GetDevicePendingFailedRejectedSoftwarePatchesRequest(BaseModel):
    id: Annotated[
        int, FieldMetadata(path=PathParamMetadata(style="simple", explode=False))
    ]
    r"""Device identifier"""

    status: Annotated[
        Optional[str],
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = None
    r"""Patch Status filter"""

    product_identifier: Annotated[
        Optional[str],
        pydantic.Field(alias="productIdentifier"),
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = None
    r"""Product Identifier"""

    type: Annotated[
        Optional[str],
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = None
    r"""Patch Type filter"""

    impact: Annotated[
        Optional[str],
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = None
    r"""Patch Impact filter"""


class GetDevicePendingFailedRejectedSoftwarePatchesResponseBodyTypedDict(TypedDict):
    id: NotRequired[str]
    r"""Identifier"""
    product_identifier: NotRequired[str]
    r"""Software product identifier"""
    title: NotRequired[str]
    r"""Patch title"""
    impact: NotRequired[str]
    r"""Impact"""
    status: NotRequired[str]
    r"""Status"""
    type: NotRequired[str]
    r"""Patch type"""
    installed_at: NotRequired[float]
    r"""Installation attempt timestamp"""


class GetDevicePendingFailedRejectedSoftwarePatchesResponseBody(BaseModel):
    id: Optional[str] = None
    r"""Identifier"""

    product_identifier: Annotated[
        Optional[str], pydantic.Field(alias="productIdentifier")
    ] = None
    r"""Software product identifier"""

    title: Optional[str] = None
    r"""Patch title"""

    impact: Optional[str] = None
    r"""Impact"""

    status: Optional[str] = None
    r"""Status"""

    type: Optional[str] = None
    r"""Patch type"""

    installed_at: Annotated[Optional[float], pydantic.Field(alias="installedAt")] = None
    r"""Installation attempt timestamp"""
