"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from enum import Enum
from ninjapy.types import BaseModel
from ninjapy.utils import FieldMetadata, QueryParamMetadata
import pydantic
from typing import List, Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class GetScopedCustomFieldsDetailedReportRequestTypedDict(TypedDict):
    cursor: NotRequired[str]
    r"""Cursor name"""
    page_size: NotRequired[int]
    r"""Limit number of records per page"""
    updated_after: NotRequired[str]
    r"""Custom fields updated after specified date"""
    fields: NotRequired[str]
    r"""Comma-separated list of fields"""
    scopes: NotRequired[str]
    r"""Comma-separated list of scopes"""
    show_secure_values: NotRequired[bool]
    r"""Flag to indicate if secure values should be returned as plain text without encryption"""


class GetScopedCustomFieldsDetailedReportRequest(BaseModel):
    cursor: Annotated[
        Optional[str],
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = None
    r"""Cursor name"""

    page_size: Annotated[
        Optional[int],
        pydantic.Field(alias="pageSize"),
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = 1000
    r"""Limit number of records per page"""

    updated_after: Annotated[
        Optional[str],
        pydantic.Field(alias="updatedAfter"),
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = None
    r"""Custom fields updated after specified date"""

    fields: Annotated[
        Optional[str],
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = None
    r"""Comma-separated list of fields"""

    scopes: Annotated[
        Optional[str],
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = "all"
    r"""Comma-separated list of scopes"""

    show_secure_values: Annotated[
        Optional[bool],
        pydantic.Field(alias="showSecureValues"),
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = None
    r"""Flag to indicate if secure values should be returned as plain text without encryption"""


class GetScopedCustomFieldsDetailedReportCursorTypedDict(TypedDict):
    name: NotRequired[str]
    offset: NotRequired[int]
    count: NotRequired[int]
    expires: NotRequired[float]


class GetScopedCustomFieldsDetailedReportCursor(BaseModel):
    name: Optional[str] = None

    offset: Optional[int] = None

    count: Optional[int] = None

    expires: Optional[float] = None


class GetScopedCustomFieldsDetailedReportScope(str, Enum):
    r"""Value definition scope (entity type)"""

    NODE = "NODE"
    LOCATION = "LOCATION"
    ORGANIZATION = "ORGANIZATION"


class GetScopedCustomFieldsDetailedReportValueTypedDict(TypedDict):
    r"""Field Value"""


class GetScopedCustomFieldsDetailedReportValue(BaseModel):
    r"""Field Value"""


class GetScopedCustomFieldsDetailedReportSource(str, Enum):
    API = "API"
    USER = "USER"
    SCRIPT = "SCRIPT"


class GetScopedCustomFieldsDetailedReportUserTypedDict(TypedDict):
    id: NotRequired[int]
    name: NotRequired[str]


class GetScopedCustomFieldsDetailedReportUser(BaseModel):
    id: Optional[int] = None

    name: Optional[str] = None


class GetScopedCustomFieldsDetailedReportUpdatedByTypedDict(TypedDict):
    r"""Value source (who/what updated the value)"""

    source: NotRequired[GetScopedCustomFieldsDetailedReportSource]
    user: NotRequired[GetScopedCustomFieldsDetailedReportUserTypedDict]


class GetScopedCustomFieldsDetailedReportUpdatedBy(BaseModel):
    r"""Value source (who/what updated the value)"""

    source: Optional[GetScopedCustomFieldsDetailedReportSource] = None

    user: Optional[GetScopedCustomFieldsDetailedReportUser] = None


class GetScopedCustomFieldsDetailedReportFieldsTypedDict(TypedDict):
    r"""Field values"""

    name: NotRequired[str]
    r"""Field name"""
    value: NotRequired[GetScopedCustomFieldsDetailedReportValueTypedDict]
    r"""Field Value"""
    updated_by: NotRequired[GetScopedCustomFieldsDetailedReportUpdatedByTypedDict]
    r"""Value source (who/what updated the value)"""
    update_time: NotRequired[float]


class GetScopedCustomFieldsDetailedReportFields(BaseModel):
    r"""Field values"""

    name: Optional[str] = None
    r"""Field name"""

    value: Optional[GetScopedCustomFieldsDetailedReportValue] = None
    r"""Field Value"""

    updated_by: Annotated[
        Optional[GetScopedCustomFieldsDetailedReportUpdatedBy],
        pydantic.Field(alias="updatedBy"),
    ] = None
    r"""Value source (who/what updated the value)"""

    update_time: Annotated[Optional[float], pydantic.Field(alias="updateTime")] = None


class GetScopedCustomFieldsDetailedReportResultsTypedDict(TypedDict):
    scope: NotRequired[GetScopedCustomFieldsDetailedReportScope]
    r"""Value definition scope (entity type)"""
    entity_id: NotRequired[int]
    r"""Entity identifier (device, organization, location)"""
    fields: NotRequired[List[GetScopedCustomFieldsDetailedReportFieldsTypedDict]]
    r"""Field values"""


class GetScopedCustomFieldsDetailedReportResults(BaseModel):
    scope: Optional[GetScopedCustomFieldsDetailedReportScope] = None
    r"""Value definition scope (entity type)"""

    entity_id: Annotated[Optional[int], pydantic.Field(alias="entityId")] = None
    r"""Entity identifier (device, organization, location)"""

    fields: Optional[List[GetScopedCustomFieldsDetailedReportFields]] = None
    r"""Field values"""


class GetScopedCustomFieldsDetailedReportResponseBodyTypedDict(TypedDict):
    r"""default response"""

    cursor: NotRequired[GetScopedCustomFieldsDetailedReportCursorTypedDict]
    results: NotRequired[List[GetScopedCustomFieldsDetailedReportResultsTypedDict]]


class GetScopedCustomFieldsDetailedReportResponseBody(BaseModel):
    r"""default response"""

    cursor: Optional[GetScopedCustomFieldsDetailedReportCursor] = None

    results: Optional[List[GetScopedCustomFieldsDetailedReportResults]] = None
