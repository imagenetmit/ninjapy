"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from enum import Enum
from ninjapy.types import BaseModel
from ninjapy.utils import FieldMetadata, PathParamMetadata, QueryParamMetadata
import pydantic
from typing import Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class State(str, Enum):
    r"""Service state"""

    UNKNOWN = "UNKNOWN"
    STOPPED = "STOPPED"
    START_PENDING = "START_PENDING"
    RUNNING = "RUNNING"
    STOP_PENDING = "STOP_PENDING"
    PAUSE_PENDING = "PAUSE_PENDING"
    PAUSED = "PAUSED"
    CONTINUE_PENDING = "CONTINUE_PENDING"


class GetDeviceServicesRequestTypedDict(TypedDict):
    id: int
    r"""Device identifier"""
    name: NotRequired[str]
    r"""Service name"""
    state: NotRequired[State]
    r"""Service state"""


class GetDeviceServicesRequest(BaseModel):
    id: Annotated[
        int, FieldMetadata(path=PathParamMetadata(style="simple", explode=False))
    ]
    r"""Device identifier"""

    name: Annotated[
        Optional[str],
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = None
    r"""Service name"""

    state: Annotated[
        Optional[State],
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = None
    r"""Service state"""


class GetDeviceServicesStartType(str, Enum):
    r"""Start Type"""

    AUTO_START = "AUTO_START"
    AUTO_START_DELAYED = "AUTO_START_DELAYED"
    BOOT_START = "BOOT_START"
    DEMAND_START = "DEMAND_START"
    DISABLED = "DISABLED"
    SYSTEM_START = "SYSTEM_START"


class GetDeviceServicesState(str, Enum):
    r"""State"""

    UNKNOWN = "UNKNOWN"
    STOPPED = "STOPPED"
    START_PENDING = "START_PENDING"
    RUNNING = "RUNNING"
    STOP_PENDING = "STOP_PENDING"
    PAUSE_PENDING = "PAUSE_PENDING"
    PAUSED = "PAUSED"
    CONTINUE_PENDING = "CONTINUE_PENDING"


class GetDeviceServicesResponseBodyTypedDict(TypedDict):
    name: NotRequired[str]
    r"""Name"""
    display_name: NotRequired[str]
    r"""Display Name"""
    description: NotRequired[str]
    r"""Description"""
    start_type: NotRequired[GetDeviceServicesStartType]
    r"""Start Type"""
    user_name: NotRequired[str]
    r"""User Name"""
    state: NotRequired[GetDeviceServicesState]
    r"""State"""


class GetDeviceServicesResponseBody(BaseModel):
    name: Optional[str] = None
    r"""Name"""

    display_name: Annotated[Optional[str], pydantic.Field(alias="displayName")] = None
    r"""Display Name"""

    description: Optional[str] = None
    r"""Description"""

    start_type: Annotated[
        Optional[GetDeviceServicesStartType], pydantic.Field(alias="startType")
    ] = None
    r"""Start Type"""

    user_name: Annotated[Optional[str], pydantic.Field(alias="userName")] = None
    r"""User Name"""

    state: Optional[GetDeviceServicesState] = None
    r"""State"""
