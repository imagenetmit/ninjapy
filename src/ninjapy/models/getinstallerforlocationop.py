"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from enum import Enum
from ninjapy.types import BaseModel
from ninjapy.utils import FieldMetadata, PathParamMetadata
from typing import Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class PathParamInstallerType(str, Enum):
    WINDOWS_MSI = "WINDOWS_MSI"
    MAC_DMG = "MAC_DMG"
    MAC_PKG = "MAC_PKG"
    LINUX_DEB = "LINUX_DEB"
    LINUX_RPM = "LINUX_RPM"
    LINUX_ARM64_DEB = "LINUX_ARM64_DEB"
    LINUX_ARMV7_A_DEB = "LINUX_ARMV7A_DEB"
    LINUX_ARM64_RPM = "LINUX_ARM64_RPM"
    LINUX_ARMV7_A_RPM = "LINUX_ARMV7A_RPM"


class GetInstallerForLocationRequestTypedDict(TypedDict):
    id: int
    location_id: int
    installer_type: PathParamInstallerType


class GetInstallerForLocationRequest(BaseModel):
    id: Annotated[
        int, FieldMetadata(path=PathParamMetadata(style="simple", explode=False))
    ]

    location_id: Annotated[
        int, FieldMetadata(path=PathParamMetadata(style="simple", explode=False))
    ]

    installer_type: Annotated[
        PathParamInstallerType,
        FieldMetadata(path=PathParamMetadata(style="simple", explode=False)),
    ]


class GetInstallerForLocationResponseBodyTypedDict(TypedDict):
    r"""default response"""

    url: NotRequired[str]
    r"""URL"""


class GetInstallerForLocationResponseBody(BaseModel):
    r"""default response"""

    url: Optional[str] = None
    r"""URL"""
