"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from enum import Enum
from ninjapy.types import BaseModel
from ninjapy.utils import FieldMetadata, PathParamMetadata, RequestMetadata
import pydantic
from typing import Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class Action(str, Enum):
    r"""Action"""

    START = "START"
    PAUSE = "PAUSE"
    STOP = "STOP"
    RESTART = "RESTART"


class ControlWindowsServiceRequestBodyTypedDict(TypedDict):
    action: NotRequired[Action]
    r"""Action"""


class ControlWindowsServiceRequestBody(BaseModel):
    action: Optional[Action] = None
    r"""Action"""


class ControlWindowsServiceRequestTypedDict(TypedDict):
    id: int
    r"""Device identifier"""
    service_id: str
    r"""Service identifier"""
    request_body: NotRequired[ControlWindowsServiceRequestBodyTypedDict]


class ControlWindowsServiceRequest(BaseModel):
    id: Annotated[
        int, FieldMetadata(path=PathParamMetadata(style="simple", explode=False))
    ]
    r"""Device identifier"""

    service_id: Annotated[
        str,
        pydantic.Field(alias="serviceId"),
        FieldMetadata(path=PathParamMetadata(style="simple", explode=False)),
    ]
    r"""Service identifier"""

    request_body: Annotated[
        Optional[ControlWindowsServiceRequestBody],
        FieldMetadata(request=RequestMetadata(media_type="application/json")),
    ] = None
