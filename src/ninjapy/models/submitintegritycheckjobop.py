"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from enum import Enum
from ninjapy.types import BaseModel
import pydantic
from typing import Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class SubmitIntegrityCheckJobRequestBodyTypedDict(TypedDict):
    r"""Request of the Integrity Check Job creation."""

    device_id: NotRequired[int]
    plan_uid: NotRequired[str]


class SubmitIntegrityCheckJobRequestBody(BaseModel):
    r"""Request of the Integrity Check Job creation."""

    device_id: Annotated[Optional[int], pydantic.Field(alias="deviceId")] = None

    plan_uid: Annotated[Optional[str], pydantic.Field(alias="planUid")] = None


class Result(str, Enum):
    SUCCESS = "SUCCESS"
    FAILURE = "FAILURE"
    UNSUPPORTED = "UNSUPPORTED"
    UNCOMPLETED = "UNCOMPLETED"


class SubmitIntegrityCheckJobResponseBodyTypedDict(TypedDict):
    r"""Response of the Integrity Check Job creation."""

    result: NotRequired[Result]
    job_uid: NotRequired[str]
    device_id: NotRequired[int]
    plan_guid: NotRequired[str]
    plan_name: NotRequired[str]
    plan_type: NotRequired[str]


class SubmitIntegrityCheckJobResponseBody(BaseModel):
    r"""Response of the Integrity Check Job creation."""

    result: Optional[Result] = None

    job_uid: Annotated[Optional[str], pydantic.Field(alias="jobUid")] = None

    device_id: Annotated[Optional[int], pydantic.Field(alias="deviceId")] = None

    plan_guid: Annotated[Optional[str], pydantic.Field(alias="planGuid")] = None

    plan_name: Annotated[Optional[str], pydantic.Field(alias="planName")] = None

    plan_type: Annotated[Optional[str], pydantic.Field(alias="planType")] = None
