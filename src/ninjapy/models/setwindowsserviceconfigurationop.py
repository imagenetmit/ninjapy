"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from enum import Enum
from ninjapy.types import BaseModel
from ninjapy.utils import FieldMetadata, PathParamMetadata, RequestMetadata
import pydantic
from typing import Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class StartType(str, Enum):
    r"""Start Type"""

    AUTO_START = "AUTO_START"
    AUTO_START_DELAYED = "AUTO_START_DELAYED"
    BOOT_START = "BOOT_START"
    DEMAND_START = "DEMAND_START"
    DISABLED = "DISABLED"
    SYSTEM_START = "SYSTEM_START"


class SetWindowsServiceConfigurationRequestBodyTypedDict(TypedDict):
    start_type: NotRequired[StartType]
    r"""Start Type"""
    user_name: NotRequired[str]
    r"""Username"""


class SetWindowsServiceConfigurationRequestBody(BaseModel):
    start_type: Annotated[Optional[StartType], pydantic.Field(alias="startType")] = None
    r"""Start Type"""

    user_name: Annotated[Optional[str], pydantic.Field(alias="userName")] = None
    r"""Username"""


class SetWindowsServiceConfigurationRequestTypedDict(TypedDict):
    id: int
    r"""Device identifier"""
    service_id: str
    r"""Service identifier"""
    request_body: NotRequired[SetWindowsServiceConfigurationRequestBodyTypedDict]


class SetWindowsServiceConfigurationRequest(BaseModel):
    id: Annotated[
        int, FieldMetadata(path=PathParamMetadata(style="simple", explode=False))
    ]
    r"""Device identifier"""

    service_id: Annotated[
        str,
        pydantic.Field(alias="serviceId"),
        FieldMetadata(path=PathParamMetadata(style="simple", explode=False)),
    ]
    r"""Service identifier"""

    request_body: Annotated[
        Optional[SetWindowsServiceConfigurationRequestBody],
        FieldMetadata(request=RequestMetadata(media_type="application/json")),
    ] = None
