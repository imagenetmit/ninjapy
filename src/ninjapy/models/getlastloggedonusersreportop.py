"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from ninjapy.types import BaseModel
from ninjapy.utils import FieldMetadata, QueryParamMetadata
import pydantic
from typing import List, Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class GetLastLoggedOnUsersReportRequestTypedDict(TypedDict):
    df: NotRequired[str]
    r"""Device filter"""
    cursor: NotRequired[str]
    r"""Cursor name"""
    page_size: NotRequired[int]
    r"""Limit number of records per page"""


class GetLastLoggedOnUsersReportRequest(BaseModel):
    df: Annotated[
        Optional[str],
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = None
    r"""Device filter"""

    cursor: Annotated[
        Optional[str],
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = None
    r"""Cursor name"""

    page_size: Annotated[
        Optional[int],
        pydantic.Field(alias="pageSize"),
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = 1000
    r"""Limit number of records per page"""


class GetLastLoggedOnUsersReportCursorTypedDict(TypedDict):
    name: NotRequired[str]
    offset: NotRequired[int]
    count: NotRequired[int]
    expires: NotRequired[float]


class GetLastLoggedOnUsersReportCursor(BaseModel):
    name: Optional[str] = None

    offset: Optional[int] = None

    count: Optional[int] = None

    expires: Optional[float] = None


class GetLastLoggedOnUsersReportResultsTypedDict(TypedDict):
    user_name: NotRequired[str]
    r"""User name"""
    logon_time: NotRequired[float]
    r"""Time of logon"""
    device_id: NotRequired[int]
    r"""Device identifier"""


class GetLastLoggedOnUsersReportResults(BaseModel):
    user_name: Annotated[Optional[str], pydantic.Field(alias="userName")] = None
    r"""User name"""

    logon_time: Annotated[Optional[float], pydantic.Field(alias="logonTime")] = None
    r"""Time of logon"""

    device_id: Annotated[Optional[int], pydantic.Field(alias="deviceId")] = None
    r"""Device identifier"""


class GetLastLoggedOnUsersReportResponseBodyTypedDict(TypedDict):
    r"""default response"""

    cursor: NotRequired[GetLastLoggedOnUsersReportCursorTypedDict]
    results: NotRequired[List[GetLastLoggedOnUsersReportResultsTypedDict]]


class GetLastLoggedOnUsersReportResponseBody(BaseModel):
    r"""default response"""

    cursor: Optional[GetLastLoggedOnUsersReportCursor] = None

    results: Optional[List[GetLastLoggedOnUsersReportResults]] = None
