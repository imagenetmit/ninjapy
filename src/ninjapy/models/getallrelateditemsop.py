"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from enum import Enum
from ninjapy.types import BaseModel
import pydantic
from typing import Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class GetAllRelatedItemsType(str, Enum):
    r"""Type of Relation"""

    VALUE = "VALUE"
    ENTITY = "ENTITY"


class GetAllRelatedItemsEntityTypedDict(TypedDict):
    r"""Entity"""


class GetAllRelatedItemsEntity(BaseModel):
    r"""Entity"""


class GetAllRelatedItemsEntityType(str, Enum):
    r"""Entity Type"""

    ORGANIZATION = "ORGANIZATION"
    DOCUMENT = "DOCUMENT"
    LOCATION = "LOCATION"
    NODE = "NODE"
    CHECKLIST = "CHECKLIST"
    KB_DOCUMENT = "KB_DOCUMENT"


class GetAllRelatedItemsRelEntityTypedDict(TypedDict):
    r"""Related Entity"""


class GetAllRelatedItemsRelEntity(BaseModel):
    r"""Related Entity"""


class GetAllRelatedItemsRelEntityType(str, Enum):
    r"""Related Entity Type"""

    ORGANIZATION = "ORGANIZATION"
    DOCUMENT = "DOCUMENT"
    LOCATION = "LOCATION"
    NODE = "NODE"
    ATTACHMENT = "ATTACHMENT"
    TECHNICIAN = "TECHNICIAN"
    CREDENTIAL = "CREDENTIAL"
    CHECKLIST = "CHECKLIST"
    END_USER = "END_USER"
    CONTACT = "CONTACT"
    KB_DOCUMENT = "KB_DOCUMENT"
    SECURE = "SECURE"


class GetAllRelatedItemsValueTypedDict(TypedDict):
    r"""Related item value (Attachment meta data / Secure information)"""


class GetAllRelatedItemsValue(BaseModel):
    r"""Related item value (Attachment meta data / Secure information)"""


class GetAllRelatedItemsResponseBodyTypedDict(TypedDict):
    id: NotRequired[int]
    r"""Identifier"""
    type: NotRequired[GetAllRelatedItemsType]
    r"""Type of Relation"""
    entity: NotRequired[GetAllRelatedItemsEntityTypedDict]
    r"""Entity"""
    entity_id: NotRequired[int]
    r"""Entity Identifier"""
    entity_type: NotRequired[GetAllRelatedItemsEntityType]
    r"""Entity Type"""
    rel_entity: NotRequired[GetAllRelatedItemsRelEntityTypedDict]
    r"""Related Entity"""
    rel_entity_id: NotRequired[int]
    r"""Related Entity Identifier"""
    rel_entity_type: NotRequired[GetAllRelatedItemsRelEntityType]
    r"""Related Entity Type"""
    value: NotRequired[GetAllRelatedItemsValueTypedDict]
    r"""Related item value (Attachment meta data / Secure information)"""
    create_time: NotRequired[float]
    r"""Creation time"""
    update_time: NotRequired[float]
    r"""Last update time"""
    created_by_app_user_id: NotRequired[int]
    r"""The identifier of the user who created the related item"""
    updated_by_app_user_id: NotRequired[int]
    r"""The identifier of the last user to update the related item"""


class GetAllRelatedItemsResponseBody(BaseModel):
    id: Optional[int] = None
    r"""Identifier"""

    type: Optional[GetAllRelatedItemsType] = None
    r"""Type of Relation"""

    entity: Optional[GetAllRelatedItemsEntity] = None
    r"""Entity"""

    entity_id: Annotated[Optional[int], pydantic.Field(alias="entityId")] = None
    r"""Entity Identifier"""

    entity_type: Annotated[
        Optional[GetAllRelatedItemsEntityType], pydantic.Field(alias="entityType")
    ] = None
    r"""Entity Type"""

    rel_entity: Annotated[
        Optional[GetAllRelatedItemsRelEntity], pydantic.Field(alias="relEntity")
    ] = None
    r"""Related Entity"""

    rel_entity_id: Annotated[Optional[int], pydantic.Field(alias="relEntityId")] = None
    r"""Related Entity Identifier"""

    rel_entity_type: Annotated[
        Optional[GetAllRelatedItemsRelEntityType], pydantic.Field(alias="relEntityType")
    ] = None
    r"""Related Entity Type"""

    value: Optional[GetAllRelatedItemsValue] = None
    r"""Related item value (Attachment meta data / Secure information)"""

    create_time: Annotated[Optional[float], pydantic.Field(alias="createTime")] = None
    r"""Creation time"""

    update_time: Annotated[Optional[float], pydantic.Field(alias="updateTime")] = None
    r"""Last update time"""

    created_by_app_user_id: Annotated[
        Optional[int], pydantic.Field(alias="createdByAppUserId")
    ] = None
    r"""The identifier of the user who created the related item"""

    updated_by_app_user_id: Annotated[
        Optional[int], pydantic.Field(alias="updatedByAppUserId")
    ] = None
    r"""The identifier of the last user to update the related item"""
