"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from enum import Enum
from ninjapy.types import BaseModel
import pydantic
from typing import Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class InstallerType(str, Enum):
    r"""Agent installer type"""

    WINDOWS_MSI = "WINDOWS_MSI"
    MAC_DMG = "MAC_DMG"
    MAC_PKG = "MAC_PKG"
    LINUX_DEB = "LINUX_DEB"
    LINUX_RPM = "LINUX_RPM"
    LINUX_ARM64_DEB = "LINUX_ARM64_DEB"
    LINUX_ARMV7_A_DEB = "LINUX_ARMV7A_DEB"
    LINUX_ARM64_RPM = "LINUX_ARM64_RPM"
    LINUX_ARMV7_A_RPM = "LINUX_ARMV7A_RPM"


class GetInstallerContentTypedDict(TypedDict):
    r"""content"""

    node_role_id: NotRequired[str]
    r"""Identifier for the nodeRole target of this installer. Acceptable values include integers, 'auto', or an empty string. If the value is omitted, or an empty string, it defaults to 'auto'."""


class GetInstallerContent(BaseModel):
    r"""content"""

    node_role_id: Annotated[Optional[str], pydantic.Field(alias="nodeRoleId")] = "auto"
    r"""Identifier for the nodeRole target of this installer. Acceptable values include integers, 'auto', or an empty string. If the value is omitted, or an empty string, it defaults to 'auto'."""


class GetInstallerRequestBodyTypedDict(TypedDict):
    organization_id: NotRequired[int]
    r"""Organization identifier"""
    location_id: NotRequired[int]
    r"""Location identifier"""
    installer_type: NotRequired[InstallerType]
    r"""Agent installer type"""
    content: NotRequired[GetInstallerContentTypedDict]
    r"""content"""


class GetInstallerRequestBody(BaseModel):
    organization_id: Annotated[
        Optional[int], pydantic.Field(alias="organizationId")
    ] = None
    r"""Organization identifier"""

    location_id: Annotated[Optional[int], pydantic.Field(alias="locationId")] = None
    r"""Location identifier"""

    installer_type: Annotated[
        Optional[InstallerType], pydantic.Field(alias="installerType")
    ] = None
    r"""Agent installer type"""

    content: Optional[GetInstallerContent] = None
    r"""content"""


class GetInstallerResponseBodyTypedDict(TypedDict):
    r"""default response"""

    url: NotRequired[str]
    r"""URL"""


class GetInstallerResponseBody(BaseModel):
    r"""default response"""

    url: Optional[str] = None
    r"""URL"""
