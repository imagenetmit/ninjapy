"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from enum import Enum
from ninjapy.types import BaseModel
from ninjapy.utils import FieldMetadata, PathParamMetadata
import pydantic
from typing import Any, Dict, List, Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class GetOrganizationRequestTypedDict(TypedDict):
    id: int
    r"""Organization identifier"""


class GetOrganizationRequest(BaseModel):
    id: Annotated[
        int, FieldMetadata(path=PathParamMetadata(style="simple", explode=False))
    ]
    r"""Organization identifier"""


class GetOrganizationNodeApprovalMode(str, Enum):
    r"""Device Approval Mode"""

    AUTOMATIC = "AUTOMATIC"
    MANUAL = "MANUAL"
    REJECT = "REJECT"


class GetOrganizationFieldsTypedDict(TypedDict):
    r"""Custom Fields"""


class GetOrganizationFields(BaseModel):
    r"""Custom Fields"""


class GetOrganizationOrganizationFieldsTypedDict(TypedDict):
    r"""Custom Fields"""


class GetOrganizationOrganizationFields(BaseModel):
    r"""Custom Fields"""


class GetOrganizationLocationsTypedDict(TypedDict):
    r"""Location"""

    name: NotRequired[str]
    r"""Location name"""
    address: NotRequired[str]
    r"""Address"""
    description: NotRequired[str]
    r"""Description"""
    user_data: NotRequired[Dict[str, Any]]
    r"""Custom attributes"""
    tags: NotRequired[List[str]]
    r"""Tags"""
    fields: NotRequired[Dict[str, GetOrganizationOrganizationFieldsTypedDict]]
    r"""Custom Fields"""
    id: NotRequired[int]
    r"""Location identifier"""


class GetOrganizationLocations(BaseModel):
    r"""Location"""

    name: Optional[str] = None
    r"""Location name"""

    address: Optional[str] = None
    r"""Address"""

    description: Optional[str] = None
    r"""Description"""

    user_data: Annotated[Optional[Dict[str, Any]], pydantic.Field(alias="userData")] = (
        None
    )
    r"""Custom attributes"""

    tags: Optional[List[str]] = None
    r"""Tags"""

    fields: Optional[Dict[str, GetOrganizationOrganizationFields]] = None
    r"""Custom Fields"""

    id: Optional[int] = None
    r"""Location identifier"""


class GetOrganizationPoliciesTypedDict(TypedDict):
    r"""Node role policy assignments"""

    node_role_id: NotRequired[int]
    r"""Node Role Identifier"""
    policy_id: NotRequired[int]
    r"""Policy Identifier"""


class GetOrganizationPolicies(BaseModel):
    r"""Node role policy assignments"""

    node_role_id: Annotated[Optional[int], pydantic.Field(alias="nodeRoleId")] = None
    r"""Node Role Identifier"""

    policy_id: Annotated[Optional[int], pydantic.Field(alias="policyId")] = None
    r"""Policy Identifier"""


class GetOrganizationOptionsTypedDict(TypedDict):
    r"""Feature options"""


class GetOrganizationOptions(BaseModel):
    r"""Feature options"""


class GetOrganizationTrayiconTypedDict(TypedDict):
    r"""Feature/product/integration configuration settings"""

    product: NotRequired[str]
    r"""Configured product code"""
    enabled: NotRequired[bool]
    r"""Is enabled"""
    targets: NotRequired[List[str]]
    r"""Feature deployment targets"""
    options: NotRequired[Dict[str, GetOrganizationOptionsTypedDict]]
    r"""Feature options"""


class GetOrganizationTrayicon(BaseModel):
    r"""Feature/product/integration configuration settings"""

    product: Optional[str] = None
    r"""Configured product code"""

    enabled: Optional[bool] = None
    r"""Is enabled"""

    targets: Optional[List[str]] = None
    r"""Feature deployment targets"""

    options: Optional[Dict[str, GetOrganizationOptions]] = None
    r"""Feature options"""


class GetOrganizationOrganizationOptionsTypedDict(TypedDict):
    r"""Feature options"""


class GetOrganizationOrganizationOptions(BaseModel):
    r"""Feature options"""


class GetOrganizationSplashtopTypedDict(TypedDict):
    r"""Feature/product/integration configuration settings"""

    product: NotRequired[str]
    r"""Configured product code"""
    enabled: NotRequired[bool]
    r"""Is enabled"""
    targets: NotRequired[List[str]]
    r"""Feature deployment targets"""
    options: NotRequired[Dict[str, GetOrganizationOrganizationOptionsTypedDict]]
    r"""Feature options"""


class GetOrganizationSplashtop(BaseModel):
    r"""Feature/product/integration configuration settings"""

    product: Optional[str] = None
    r"""Configured product code"""

    enabled: Optional[bool] = None
    r"""Is enabled"""

    targets: Optional[List[str]] = None
    r"""Feature deployment targets"""

    options: Optional[Dict[str, GetOrganizationOrganizationOptions]] = None
    r"""Feature options"""


class GetOrganizationOrganizationResponseOptionsTypedDict(TypedDict):
    r"""Feature options"""


class GetOrganizationOrganizationResponseOptions(BaseModel):
    r"""Feature options"""


class GetOrganizationTeamviewerTypedDict(TypedDict):
    r"""Feature/product/integration configuration settings"""

    product: NotRequired[str]
    r"""Configured product code"""
    enabled: NotRequired[bool]
    r"""Is enabled"""
    targets: NotRequired[List[str]]
    r"""Feature deployment targets"""
    options: NotRequired[Dict[str, GetOrganizationOrganizationResponseOptionsTypedDict]]
    r"""Feature options"""


class GetOrganizationTeamviewer(BaseModel):
    r"""Feature/product/integration configuration settings"""

    product: Optional[str] = None
    r"""Configured product code"""

    enabled: Optional[bool] = None
    r"""Is enabled"""

    targets: Optional[List[str]] = None
    r"""Feature deployment targets"""

    options: Optional[Dict[str, GetOrganizationOrganizationResponseOptions]] = None
    r"""Feature options"""


class GetOrganizationOrganizationResponseDefaultOptionsTypedDict(TypedDict):
    r"""Feature options"""


class GetOrganizationOrganizationResponseDefaultOptions(BaseModel):
    r"""Feature options"""


class GetOrganizationBackupTypedDict(TypedDict):
    r"""Feature/product/integration configuration settings"""

    product: NotRequired[str]
    r"""Configured product code"""
    enabled: NotRequired[bool]
    r"""Is enabled"""
    targets: NotRequired[List[str]]
    r"""Feature deployment targets"""
    options: NotRequired[
        Dict[str, GetOrganizationOrganizationResponseDefaultOptionsTypedDict]
    ]
    r"""Feature options"""


class GetOrganizationBackup(BaseModel):
    r"""Feature/product/integration configuration settings"""

    product: Optional[str] = None
    r"""Configured product code"""

    enabled: Optional[bool] = None
    r"""Is enabled"""

    targets: Optional[List[str]] = None
    r"""Feature deployment targets"""

    options: Optional[Dict[str, GetOrganizationOrganizationResponseDefaultOptions]] = (
        None
    )
    r"""Feature options"""


class GetOrganizationOrganizationResponseDefaultApplicationJSONOptionsTypedDict(
    TypedDict
):
    r"""Feature options"""


class GetOrganizationOrganizationResponseDefaultApplicationJSONOptions(BaseModel):
    r"""Feature options"""


class GetOrganizationPsaTypedDict(TypedDict):
    r"""Feature/product/integration configuration settings"""

    product: NotRequired[str]
    r"""Configured product code"""
    enabled: NotRequired[bool]
    r"""Is enabled"""
    targets: NotRequired[List[str]]
    r"""Feature deployment targets"""
    options: NotRequired[
        Dict[
            str,
            GetOrganizationOrganizationResponseDefaultApplicationJSONOptionsTypedDict,
        ]
    ]
    r"""Feature options"""


class GetOrganizationPsa(BaseModel):
    r"""Feature/product/integration configuration settings"""

    product: Optional[str] = None
    r"""Configured product code"""

    enabled: Optional[bool] = None
    r"""Is enabled"""

    targets: Optional[List[str]] = None
    r"""Feature deployment targets"""

    options: Optional[
        Dict[str, GetOrganizationOrganizationResponseDefaultApplicationJSONOptions]
    ] = None
    r"""Feature options"""


class GetOrganizationSettingsTypedDict(TypedDict):
    r"""Organization settings"""

    trayicon: NotRequired[GetOrganizationTrayiconTypedDict]
    r"""Feature/product/integration configuration settings"""
    splashtop: NotRequired[GetOrganizationSplashtopTypedDict]
    r"""Feature/product/integration configuration settings"""
    teamviewer: NotRequired[GetOrganizationTeamviewerTypedDict]
    r"""Feature/product/integration configuration settings"""
    backup: NotRequired[GetOrganizationBackupTypedDict]
    r"""Feature/product/integration configuration settings"""
    psa: NotRequired[GetOrganizationPsaTypedDict]
    r"""Feature/product/integration configuration settings"""


class GetOrganizationSettings(BaseModel):
    r"""Organization settings"""

    trayicon: Optional[GetOrganizationTrayicon] = None
    r"""Feature/product/integration configuration settings"""

    splashtop: Optional[GetOrganizationSplashtop] = None
    r"""Feature/product/integration configuration settings"""

    teamviewer: Optional[GetOrganizationTeamviewer] = None
    r"""Feature/product/integration configuration settings"""

    backup: Optional[GetOrganizationBackup] = None
    r"""Feature/product/integration configuration settings"""

    psa: Optional[GetOrganizationPsa] = None
    r"""Feature/product/integration configuration settings"""


class GetOrganizationResponseBodyTypedDict(TypedDict):
    r"""default response"""

    name: NotRequired[str]
    r"""Organization full name"""
    description: NotRequired[str]
    r"""Organization Description"""
    user_data: NotRequired[Dict[str, Any]]
    r"""Custom attributes"""
    node_approval_mode: NotRequired[GetOrganizationNodeApprovalMode]
    r"""Device Approval Mode"""
    tags: NotRequired[List[str]]
    r"""Tags"""
    fields: NotRequired[Dict[str, GetOrganizationFieldsTypedDict]]
    r"""Custom Fields"""
    id: NotRequired[int]
    r"""Organization identifier"""
    locations: NotRequired[List[GetOrganizationLocationsTypedDict]]
    r"""List of locations"""
    policies: NotRequired[List[GetOrganizationPoliciesTypedDict]]
    r"""Node role policy assignments"""
    settings: NotRequired[GetOrganizationSettingsTypedDict]
    r"""Organization settings"""


class GetOrganizationResponseBody(BaseModel):
    r"""default response"""

    name: Optional[str] = None
    r"""Organization full name"""

    description: Optional[str] = None
    r"""Organization Description"""

    user_data: Annotated[Optional[Dict[str, Any]], pydantic.Field(alias="userData")] = (
        None
    )
    r"""Custom attributes"""

    node_approval_mode: Annotated[
        Optional[GetOrganizationNodeApprovalMode],
        pydantic.Field(alias="nodeApprovalMode"),
    ] = None
    r"""Device Approval Mode"""

    tags: Optional[List[str]] = None
    r"""Tags"""

    fields: Optional[Dict[str, GetOrganizationFields]] = None
    r"""Custom Fields"""

    id: Optional[int] = None
    r"""Organization identifier"""

    locations: Optional[List[GetOrganizationLocations]] = None
    r"""List of locations"""

    policies: Optional[List[GetOrganizationPolicies]] = None
    r"""Node role policy assignments"""

    settings: Optional[GetOrganizationSettings] = None
    r"""Organization settings"""
