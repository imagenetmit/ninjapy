"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from enum import Enum
from ninjapy.types import BaseModel
from ninjapy.utils import FieldMetadata, PathParamMetadata, RequestMetadata
import pydantic
from typing import List, Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class DisabledFeatures(str, Enum):
    r"""List of features that will be disabled during maintenance"""

    ALERTS = "ALERTS"
    PATCHING = "PATCHING"
    AVSCANS = "AVSCANS"
    TASKS = "TASKS"


class UpdateDeviceMaintenanceRequestBodyTypedDict(TypedDict):
    disabled_features: NotRequired[List[DisabledFeatures]]
    r"""List of features that will be disabled during maintenance"""
    start: NotRequired[float]
    r"""Maintenance window start (optional, defaults to now)"""
    end: NotRequired[float]
    r"""Maintenance window end"""


class UpdateDeviceMaintenanceRequestBody(BaseModel):
    disabled_features: Annotated[
        Optional[List[DisabledFeatures]], pydantic.Field(alias="disabledFeatures")
    ] = None
    r"""List of features that will be disabled during maintenance"""

    start: Optional[float] = None
    r"""Maintenance window start (optional, defaults to now)"""

    end: Optional[float] = None
    r"""Maintenance window end"""


class UpdateDeviceMaintenanceRequestTypedDict(TypedDict):
    id: int
    r"""Device identifier"""
    request_body: NotRequired[UpdateDeviceMaintenanceRequestBodyTypedDict]


class UpdateDeviceMaintenanceRequest(BaseModel):
    id: Annotated[
        int, FieldMetadata(path=PathParamMetadata(style="simple", explode=False))
    ]
    r"""Device identifier"""

    request_body: Annotated[
        Optional[UpdateDeviceMaintenanceRequestBody],
        FieldMetadata(request=RequestMetadata(media_type="application/json")),
    ] = None
