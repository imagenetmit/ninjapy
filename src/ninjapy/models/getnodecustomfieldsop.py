"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from ninjapy.types import BaseModel
from ninjapy.utils import FieldMetadata, PathParamMetadata, QueryParamMetadata
import pydantic
from typing import Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class GetNodeCustomFieldsRequestTypedDict(TypedDict):
    id: int
    r"""Device identifier"""
    with_inheritance: NotRequired[bool]
    r"""Retrieve values using definition scope hierarchy"""


class GetNodeCustomFieldsRequest(BaseModel):
    id: Annotated[
        int, FieldMetadata(path=PathParamMetadata(style="simple", explode=False))
    ]
    r"""Device identifier"""

    with_inheritance: Annotated[
        Optional[bool],
        pydantic.Field(alias="withInheritance"),
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = None
    r"""Retrieve values using definition scope hierarchy"""


class GetNodeCustomFieldsResponseBodyTypedDict(TypedDict):
    pass


class GetNodeCustomFieldsResponseBody(BaseModel):
    pass
